<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Smart City Travel</title>
    <link rel="shortcut icon" type="image/png" href="/Public/Image/icon.png" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <link rel="stylesheet" href="/Public/Style/admin.css">
  </head>
  <body>
    <div class="sidebar">
      <h2>Menu</h2>
      <ul>
        <li><a href="#tour" onclick="showSection('tourSection')">Tour</a></li>
        <li><a href="#blog" onclick="showSection('blogSection')">Blog</a></li>
        <li><a href="#user" onclick="showSection('userSection')">User</a></li>
      </ul>
    </div>
    <div class="content" id="tourSection">
      <div class="container">
        <h2>Manage Tours</h2>
        <!-- Form to Add New Tour -->
        <form id="addTourForm">
          <label for="name">Tour Name:</label>
          <input type="text" id="name" name="name" required />

          <label for="location">Location:</label>
          <input type="text" id="location" name="location" required />

          <label for="image">Image URL:</label>
          <input type="text" id="image" name="image" required />

          <label for="title">Title:</label>
          <textarea id="title" name="title" required></textarea>
          <label for="description">Description:</label>
          <textarea id="description" name="description" required></textarea>

          <input type="submit" value="Add Tour"></input>
          <button type="button" id="updateTourButton" style="display: none">
            Update Tour
          </button>
        </form>
        <!-- Tour List -->
        <div class="tour-list" id="tourList">
          <!-- Tour items will be displayed here -->
        </div>
      </div>
    </div>
    <div class="content" id="blogSection">
      <div class="container">
        <h2>Manage Blogs</h2>
        <!-- Form to Add New Blog -->
        <form id="addBlogForm">
          <label for="blogTitle">Blog Title:</label>
          <input type="text" id="blogTitle" name="blogTitle" required />
          <label for="blogCategory">Category:</label>
          <!-- <input type="text" id="blogCategory" name="blogCategory" required /> -->
          <select id="blogCategory" name="blogCategory" required>
            <option value="Travel">Travel</option>
            <option value="Food">Food</option>
            <option value="Nature">Nature</option>
          </select>
          <label for="blogDescription">Description:</label>
          <textarea
            id="blogDescription"
            name="blogDescription"
            required
          ></textarea>
          <label for="blogCardImage">Card Image URL:</label>
          <input type="text" id="blogCardImage" name="blogCardImage" required />

          <label for="blogAuthor">Author:</label>
          <input type="text" id="blogAuthor" name="blogAuthor" required />

          <label for="blogProfileImage">Profile Image URL:</label>
          <input
            type="text"
            id="blogProfileImage"
            name="blogProfileImage"
            required
          />
          <input type="submit" value="Add Blog" />
        </form>

        <!-- Container to Display Blog List -->
        <div class="blog-list" id="blogList">
          <!-- Blog items will be displayed here -->
        </div>
      </div>
    </div>

    <div class="content" id="userSection">
      <div class="container">
        <h2>Manage Users</h2>
        <!-- Form to Add New User -->
        <form id="addUserForm">
          <label for="username">Username:</label>
          <input type="text" id="username" name="username" required />
          <label for="password">Password:</label>
          <input type="password" id="password" name="password" required />
          <input type="submit" value="Add User" />
        </form>
        <!-- Container to Display User List -->
        <div class="user-list" id="userList">
          <!-- User items will be displayed here -->
        </div>
      </div>
    </div>
    <!-- <div class="content" id="logoutSection">
      <div class="container">
        <h2>Log Out</h2>
        <p>Logging out...</p>
      </div>
    </div> -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
      function showSection(sectionId) {
        $(".content").hide(); // Ẩn tất cả các phần tử có class 'content'
        $("#" + sectionId).show(); // Hiển thị phần tử có id tương ứng
      }
      showSection("tourSection");
      // Trong phần script của file HTML
      $(document).ready(function () {
        var allTours = []; // Biến global để lưu trữ tất cả các tours
        var currentEditTourId = null; // Biến để lưu trữ ID của tour đang được chỉnh sửa

        function loadAllTours(page = 1) {
          $.ajax({
            type: "GET",
            url: "/api/tours?page=" + page,
            success: function (response) {
              if (response.length > 0) {
                allTours = allTours.concat(response); // Thêm dữ liệu từ trang hiện tại vào biến global
                loadAllTours(page + 1); // Gọi đệ quy để lấy dữ liệu từ trang tiếp theo
              } else {
                // Khi đã lấy hết dữ liệu từ tất cả các trang
                renderTours(allTours); // Render tất cả các tours
              }
            },
            error: function () {
              alert("Error loading tours.");
            },
          });
        }

        // Function to edit a tour
        function editTour(id, name, location, title, description, image) {
          // Populate the form with existing tour data
          $("#name").val(name);
          $("#location").val(location);
          $("#title").val(title);
          $("#description").val(description);
          $("#image").val(image);

          // Store the current tour ID
          currentEditTourId = id;

          // Show the Update button and hide the Add button
          $("#updateTourButton").show();
          $("#addTourButton").hide();
        }

        // Function to update a tour
        function updateTour() {
          var tourData = {
            name: $("#name").val(),
            location: $("#location").val(),
            title: $("#title").val(),
            description: $("#description").val(),
            image: $("#image").val(),
          };

          $.ajax({
            type: "PATCH",
            url: `/api/tours/${currentEditTourId}`, // Endpoint to update the tour
            data: JSON.stringify(tourData),
            contentType: "application/json",
            success: function (response) {
              alert("Tour updated successfully!");
              location.reload(); // Reload the page
            },
            error: function () {
              alert("Error updating tour.");
            },
          });
        }

        function deleteTour(tourId) {
          console.log(tourId);
          $.ajax({
            type: "DELETE",
            url: `/api/tours/${tourId}`,
            success: function (response) {
              alert("Tour deleted successfully!");
              // location.reload();
              const tourElement = document.getElementById(tourId);
              if (tourElement) {
                tourElement.parentNode.removeChild(tourElement);
                console.log(`Đã xóa tour với ID: ${tourId}`);
              } else {
                console.log(`Không tìm thấy tour với ID: ${tourId}`);
              }
            },
            error: function (e) {
              console.log(e);
              alert("Error deleting tour.");
            },
          });
        }

        function renderTours(tours) {
          $("#tourList").empty(); // Xóa danh sách tour hiện tại

          // Duyệt qua mỗi tour và hiển thị nó
          tours.forEach((tour) => {
            $("#tourList").append(`
            <div id="${tour._id}" class="tour-item">
              <h3>${tour.name}</h3>
              <p><strong>Place:</strong> ${tour.location}</p>
              <p><strong>Title:</strong> ${tour.title}</p>
              <p><strong>Description:</strong> ${tour.description}</p>
              <p><img src="${tour.image}" alt="${tour.title}" style="width:100px; height:auto;"></p>
              <div class="tour-actions">
                <button class="tour-delete-btn">Delete</button>
                <button class="tour-edit-btn">Edit</button>
              </div>
            </div>
            `);
          });

          // Add event listeners to delete buttons
          const deleteButtons = document.querySelectorAll(".tour-delete-btn");
          deleteButtons.forEach((button, index) => {
            button.addEventListener("click", () =>
              deleteTour(tours[index]._id)
            );
          });

          // Add event listeners to edit buttons
          const editButtons = document.querySelectorAll(".tour-edit-btn");
          editButtons.forEach((button, index) => {
            button.addEventListener("click", () =>
              editTour(
                tours[index]._id,
                tours[index].name,
                tours[index].location,
                tours[index].title,
                tours[index].description,
                tours[index].image
              )
            );
          });
        }

        // Handle form submission for adding a new tour
        $("#tourForm").submit(function (event) {
          event.preventDefault();

          var tourData = {
            name: $("#name").val(),
            location: $("#location").val(),
            image: $("#image").val(),
            title: $("#title").val(),
            description: $("#description").val(),
          };

          $.ajax({
            type: "POST",
            url: "/api/tours", // Endpoint to add a new tour
            data: JSON.stringify(tourData),
            contentType: "application/json",
            success: function (response) {
              alert("Tour added successfully!");
              location.reload(); // Reload the page
            },
            error: function () {
              alert("Error adding tour.");
            },
          });
        });

        // Handle click event for the Update Tour button
        $("#updateTourButton").click(function () {
          updateTour();
        });
        // button add tour
        $("#addTourForm").submit(function (event) {
          event.preventDefault();

          var tourData = {
            name: $("#name").val(),
            location: $("#location").val(),
            image: $("#image").val(),
            title: $("#title").val(),
            description: $("#description").val(),
          };

          $.ajax({
            type: "POST",
            url: "/api/tours", // Endpoint to add a new tour
            data: JSON.stringify(tourData),
            contentType: "application/json",
            success: function (response) {
              alert("Tour added successfully!");
              $("#addTourForm")[0].reset(); // Clear the form
              location.reload(); // Reload the page
            },
            error: function () {
              alert("Error adding tour.");
            },
          });
        });

        // Load tất cả các tour khi trang được tải
        loadAllTours();
      });
      // -----------------------BLOG---------------------
      $(document).ready(function () {
        // Function to load and render all blogs
        function loadAllBlogs() {
          $.ajax({
            type: "GET",
            url: "/api/blogs", // Endpoint to fetch all blogs
            success: function (response) {
              renderBlogs(response); // Render all blogs
            },
            error: function () {
              alert("Error loading blogs.");
            },
          });
        }

        // Function to render the list of blogs
        function renderBlogs(blogs) {
          // Clear the existing blog list
          $("#blogList").empty();

          // Render each blog
          blogs.forEach((blog) => {
            $("#blogList").append(`
             <div class="blog-item">
               <h3>${blog.title}</h3>
               <p><strong>Category:</strong> ${blog.category}</p>
               <p>${blog.description}</p>
               <!-- Add other blog details here -->
             </div>
           `);
          });
        }

        // Load all blogs when the page is ready
        loadAllBlogs();
        // Bắt sự kiện khi form "Add Blog" được submit
        $("#addBlogForm").submit(function (event) {
          event.preventDefault(); // Ngăn form submit theo cách truyền thống

          // Lấy dữ liệu từ các trường input trong form
          var blogData = {
            category: $("#blogCategory").val(),
            title: $("#blogTitle").val(),
            description: $("#blogDescription").val(),
            cardImage: $("#blogCardImage").val(),
            author: $("#blogAuthor").val(),
            profileImage: $("#blogProfileImage").val(),
          };

          // Gửi yêu cầu AJAX đến máy chủ để thêm mới dữ liệu blog
          $.ajax({
            type: "POST",
            url: "/api/blogs", // Thay đổi thành URL thực tế của bạn
            data: JSON.stringify(blogData),
            contentType: "application/json",
            success: function (response) {
              // Xử lý phản hồi từ máy chủ
              alert("Blog added successfully!");

              // Xóa dữ liệu cũ trong form sau khi thêm thành công
              $("#addBlogForm")[0].reset();

              // Render lại dữ liệu blog mới
              loadAllBlogs();
            },
            error: function () {
              alert("Error adding blog.");
            },
          });
        });
      });

    // ----------------------USER---------------
    // Function to load users from the server
    function loadUsers() {
      $.ajax({
        type: "GET",
        url: "/api/account/login", // Endpoint to fetch user data
        success: function (response) {
          renderUsers(response); // Render the fetched users
        },
        error: function () {
          alert("Error loading users.");
        },
      });
    }

    // Function to render the list of users
    function renderUsers(users) {
      $("#userList").empty(); // Clear the existing user list

      users.forEach((user) => {
        $("#userList").append(`
          <div class="user-item">
            <p><strong>Username:</strong> ${user.username}</p>
            <p><strong>Password:</strong> ${user.password}</p>
          </div>
        `);
      });
    }

    $(document).ready(function () {
      loadUsers(); // Load users when the page is ready

      // Add User Form Submission
      $("#addUserForm").submit(function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Gather form data
        var userData = {
          username: $("#username").val(),
          password: $("#password").val(),
        };

        // Send form data to the server via AJAX
        $.ajax({
          type: "POST",
          url: "/api/account/register",
          data: JSON.stringify(userData),
          contentType: "application/json",
          success: function (response) {
            alert("User added successfully!");
            loadUsers(); // Reload user list after adding user
          },
          error: function () {
            alert("Error adding user.");
          },
        });
      });
    });
    </script>
  </body>
</html>
